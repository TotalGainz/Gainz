# .github/workflows/ci.yml
# Gainz ▸ Continuous Integration — build, lint, test, and ship to TestFlight
# Runs on every push & PR to `main`. Cancels older runs on the same ref.

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: macos-14
    timeout-minutes: 60

    env:
      XCODE_VERSION: "15.1"

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: 🛠️ Select Xcode ${{ env.XCODE_VERSION }}
        run: sudo xcode-select -s /Applications/Xcode_${XCODE_VERSION}.app || sudo xcode-select -p

      - name: 💾 Cache DerivedData
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-deriveddata-${{ hashFiles('**/*.xcodeproj/**', '**/*.swift', '**/*.xcworkspace/**', 'project.yml') }}
          restore-keys: |
            ${{ runner.os }}-deriveddata-

      - name: 📦 Install CLI tools
        run: |
          brew install swiftlint swiftformat xcodegen
          gem install bundler
          bundle install --path vendor/bundle

      - name: 🏗  Generate Xcode project
        run: ./Tools/build-setup/generate_project.sh

      - name: 🚀 Bootstrap scripts
        run: ./Scripts/bootstrap.sh

      - name: 🔍 Lint
        run: ./Tools/linting/lint.sh

      - name: 🧪 Build & test (iOS 17.4, iPhone 15 Pro)
        run: |
          xcodebuild test \
            -project Gainz.xcodeproj \
            -scheme Gainz \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.4' \
            -parallel-testing-enabled YES \
            -enableCodeCoverage YES | xcpretty

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: 📦 Archive Release build (main branch only)
        if: github.ref == 'refs/heads/main'
        run: |
          xcodebuild \
            -project Gainz.xcodeproj \
            -scheme Gainz \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath $PWD/build/Gainz.xcarchive \
            archive

      - name: 📤 Upload build artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: Gainz.xcarchive
          path: build/Gainz.xcarchive

  fastlane-beta:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: macos-14
    timeout-minutes: 40

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 📦 Install Ruby gems
        run: |
          gem install bundler
          bundle install --path vendor/bundle

      - name: 🚀 Fastlane beta deploy
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APPSTORE_CONNECT_API_KEY_PATH: ${{ secrets.APPSTORE_CONNECT_API_KEY_PATH }}
        run: bundle exec fastlane ios beta
