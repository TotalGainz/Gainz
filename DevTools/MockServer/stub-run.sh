#!/usr/bin/env bash
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
#  DevTools/MockServer/stub-run.sh
#  Spin-up a zero-config JSON stub API for local Gainz development
#  â”€ compiles in <1â€‰s, hot reloads on file save.
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
set -euo pipefail

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# MARK: â€¢ Constants
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(cd "${SCRIPT_DIR}/../.." && pwd)"
DB_FILE="${SCRIPT_DIR}/db.json"                 # seed data
ROUTES_FILE="${SCRIPT_DIR}/routes.json"        # REST â†”ï¸Ž file mapping
PORT="${GAINZ_MOCK_PORT:-8080}"

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# MARK: â€¢ Dependency check
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
command -v json-server >/dev/null 2>&1 || {
  echo "ðŸ”§  Installing json-server globally (requires npm)â€¦"
  npm install -g json-server
}

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# MARK: â€¢ Cleanup hook
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
cleanup() {
  echo -e "\nðŸ›‘  Stopping mock serverâ€¦"
  kill "${SERVER_PID}" 2>/dev/null || true
}
trap cleanup INT TERM EXIT

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# MARK: â€¢ Launch
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
echo "ðŸš€  Starting Gainz mock API on http://localhost:${PORT}"
json-server                     \
  --watch  "${DB_FILE}"         \
  --routes "${ROUTES_FILE}"     \
  --static "${ROOT_DIR}/Assets/MockUploads" \
  --port   "${PORT}"            \
  --delay  200 &                # simulate network latency (ms)
SERVER_PID=$!

# Optional: open API root in default browser
if [[ "$OSTYPE" == "darwin"* ]]; then
  open "http://localhost:${PORT}"
fi

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# MARK: â€¢ Tail logs
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
wait "${SERVER_PID}"
